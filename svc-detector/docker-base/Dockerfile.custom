# OpenCV 4 prebuilt multiarchitecture image
#
# To build release:
#   docker buildx build -f Dockerfile.custom -t opencv:4.11.0-custom -t registry.skycluster.io/opencv:4.11.0-custom  --platform=linux/amd64 --load .
#   docker buildx build -f Dockerfile.custom -t opencv:4.11.0-custom -t registry.skycluster.io/opencv:4.11.0-custom  --platform=linux/arm64 --push .
#

###################
# amd64 build stage
###################

FROM --platform=linux/amd64 golang:1.23.8 AS opencv-base-amd64

RUN apt-get update && apt-get install -y \
      git build-essential cmake pkg-config unzip \
      curl ca-certificates wget && \
      rm -rf /var/lib/apt/lists/*

FROM --platform=linux/amd64 opencv-base-amd64 AS opencv-build-amd64

RUN wget -P /tmp https://github.com/hybridgroup/gocv/archive/refs/tags/opencv-4.11.0.zip && \
      unzip -q /tmp/opencv-4.11.0.zip -d /tmp && \
      rm /tmp/opencv-4.11.0.zip

RUN cd /tmp/gocv-opencv-4.11.0 && \
      sed -i 's/sudo//g' Makefile && \
      make install

# ###################
# # arm64 build stage
# ###################

FROM --platform=linux/arm64 golang:1.23.8 AS opencv-base-arm64

RUN apt-get update && apt-get install -y \
      git build-essential cmake pkg-config unzip \
      curl ca-certificates wget && \
      rm -rf /var/lib/apt/lists/*

FROM --platform=linux/arm64 opencv-base-arm64 AS opencv-build-arm64

RUN wget -P /tmp https://github.com/hybridgroup/gocv/archive/refs/tags/opencv-4.11.0.zip && \
      unzip -q /tmp/opencv-4.11.0.zip -d /tmp && \
      rm /tmp/opencv-4.11.0.zip

RUN cd /tmp/gocv-opencv-4.11.0 && \
      sed -i 's/sudo//g' Makefile && \
      make install

ARG TARGETARCH

###################
# multiarch build stage
###################

FROM opencv-build-${TARGETARCH} as opencv-final

CMD ["opencv_version", "-b"]